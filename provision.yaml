---
- name: Install MacOS Packages
  hosts: localhost
  become: false
  vars:
    brew_cask_packages:
      - dropbox
      - firefox
      - iterm2
      - 1password
      - macvim
      - skype
      - spotify
      - virtualbox
      - virtualbox-extension-pack
      - caffeine
      - maccy
      - telegram
      - karabiner-elements
      # - vmware-fusion
    brew_packages:
      - git
      - jq
      - nmap
      - openssl
      - htop
      - pass
      # - pyenv
      # - python
      - ssh-copy-id
      - fish

      - tmux
      - tree
      - wget
    install_homebrew_if_missing: false
    # python_modules:
    #   - configparser
    #   - pylint
    #   - virtualenv
    upgrade_homebrew_packages: false

  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
#      until: result is successful
      when: homebrew_check.stat.exists

    - name: Installing Homebrew Cask Packages
      homebrew_cask:
        name: "{{ brew_cask_packages }}"
        state: present
        accept_external_apps: True
#      until: result is successful
      when: homebrew_check.stat.exists
      register: result

    - name: Installing Homebrew Packages
      homebrew:
        name: "{{ brew_packages }}"
        state: present
#      until: result is successful
      when: homebrew_check.stat.exists
      register: result

      - name: Check is omf installed
        shell: command -v omf >/dev/null 2>&1
        register: is_omf_exist
        ignore_errors: yes

      - debug: msg="{{ is_omf_exist.rc }}" # it returns rc 1
      - debug: var=is_omf_exist

      - name: Install OhMyFish
        shell: curl -L https://get.oh-my.fish | fish
        when: not is_omf_exist.stat.exists

    # - name: Installing Python Modules
    #   pip:
    #     name: "{{ item }}"
    #     state: present
    #   with_items: '{{ python_modules }}'
